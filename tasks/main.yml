# Matrix Automation Task File
# Author: Cameron Wickes
# Date: 02/04/22
---

# -------------------------------------
# Install Required Packages

- name: Install Required System Packages
  ansible.builtin.apt:
    update_cache: true
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3
      - python3-pip
      - python3-dev
      - python3-setuptools
      - virtualenv
      - libpq-dev
      - libssl-dev
      - libffi-dev
  become: true

- name: Add Podman GPG Keys & Repo
  ansible.builtin.shell: ". /etc/os-release && echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list && curl -L "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key" | sudo apt-key add -"
  become: true

- name: Update Apt and Install Podman
  ansible.builtin.apt:
    update_cache: true
    name: podman
  become: true

- name: Install PostgreSQL Python Module
  ansible.builtin.pip:
    name:
      - psycopg2
  become: true

# -------------------------------------
# Create Required Users

- name: Create 'synapse' Group
  ansible.builtin.group:
    name: "{{ synapse_name }}"
    gid: 991
  become: true

- name: Create 'synapse' User
  ansible.builtin.user:
    name: "{{ synapse_name }}"
    group: "{{ synapse_name }}"
    uid: 991
  become: true

- name: Create Synapse Pod
  containers.podman.podman_pod:
    name: synapse_pod
    state: started
    ports:
      - "8080:80"
      - "4343:443"
      - "8090:8090"
      - "127.0.0.1:5432:5432"
      - "127.0.0.1:8008:8008"

# -------------------------------------
# Pull Required Images

- name: Pull PostgreSQL Podman Image
  containers.podman.podman_image:
    name: "{{ postgres_podman_image }}"

- name: Pull Synapse Podman Image
  containers.podman.podman_image:
    name: "{{ synapse_podman_image }}"

- name: Pull HTTPS Portal Image
  containers.podman.podman_image:
    name: "{{ https_portal_podman_image }}"

- name: Pull MA1SD Image
  containers.podman.podman_image:
    name: "{{ ma1sd_podman_image }}"

# -------------------------------------
# Start PostgreSQL Services & Container

- name: Create PostgreSQL Data Container
  containers.podman.podman_container:
    name: "{{ postgres_container_name }}-data"
    image: "{{ postgres_podman_image }}"
    state: present

- name: Create PostgreSQL Container
  containers.podman.podman_container:
    name: "{{ postgres_container_name }}"
    image: "{{ postgres_podman_image }}"
    state: started
    restart_policy: unless-stopped
    memory: "{{ container_memory_limit | default(omit) }}"
    pod: synapse_pod
    env:
      POSTGRES_DB: "db"
      POSTGRES_HOST_AUTH_METHOD: "trust"
    volumes_from:
      - "{{ postgres_container_name }}-data"
  register: postgres_container_trigger

- name: Wait Until PostgreSQL Starts Up
  ansible.builtin.wait_for:
    port: 5432
    delay: 5

- name: Create '{{ postgres_user }}' User
  ansible.builtin.postgresql_user: >
    name={{ postgres_user }}
    password={{ postgres_password }}
    role_attr_flags=CREATEDB,SUPERUSER,LOGIN
    login_host=127.0.0.1
    port=5432

- name: Create '{{ synapse_db_name }}' Database
  ansible.builtin.postgresql_db: >
    name={{ synapse_db_name }}
    owner={{ postgres_user }}
    login_host=127.0.0.1
    port=5432
    target={{ postgres_schema | default(omit) }}
    state={{ (postgres_schema is defined) | ternary("restore", omit) }}
    template=template0
    lc_collate=C
    lc_ctype=C

# -------------------------------------
# Start Synapse Services & Container

- name: Ensure Synapse Configuration Paths Exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0777
    owner: "{{ synapse_name }}"
    group: "{{ synapse_name }}"
  with_items:
    - "/home/synapse"
    - "/home/synapse/data"
    - "/home/synapse/data/{{ ma1sd_name }}"
    - "/home/synapse/data/{{ synapse_name }}"
    - "/home/synapse/data/{{ synapse_name }}/config"
    - "/home/synapse/data/{{ synapse_name }}/media"
    - "/home/synapse/data/{{ synapse_name }}/logs"
  become: true

- name: Register Synapse Signing Keys
  ansible.builtin.stat:
    path: /home/synapse/data/{{ synapse_name }}/{{ synapse_server_name }}.signing.key
  register: signing_key_trigger

- name: Generate Synapse Signing Keys
  ansible.builtin.command: "
    podman run
    --rm
    --mount type=bind,src=/home/synapse/data/{{ synapse_name }},dst=/data
    -e SYNAPSE_SERVER_NAME={{ synapse_server_name }}
    -e SYNAPSE_REPORT_STATS=no
    {{ synapse_podman_image }} generate"
  when: not signing_key_trigger.stat.exists
  become: true

- name: Ensure Synapse Signing Key Permissions
  ansible.builtin.file:
    path: "{{ item }}"
    mode: 0777
    owner: "{{ synapse_name }}"
    group: "{{ synapse_name }}"
  with_items:
    - "/home/synapse/data/{{ synapse_name }}/{{ synapse_server_name }}.log.config"
    - "/home/synapse/data/{{ synapse_name }}/{{ synapse_server_name }}.signing.key"
  become: true

- name: Copy Synapse Configuration File
  ansible.builtin.template:
    src: synapse.yaml
    mode: 0777
    dest: "/home/synapse/data/{{ synapse_name }}/homeserver.yaml"
  register: synapse_config_trigger

- name: Create Synapse Container
  containers.podman.podman_container:
    name: "{{ synapse_container_name }}"
    image: "{{ synapse_podman_image }}"
    state: started
    restart: "{{ synapse_config_trigger.changed }}"
    pod: synapse_pod
    env:
      SYNAPSE_CONFIG_DIR: "/data"
    volumes:
      - "/home/synapse/data/{{ synapse_name }}:/data"

# -------------------------------------
# Start Identity Server Container

- name: Copy MA1SD Configuration File
  ansible.builtin.template:
    src: ma1sd.yaml
    mode: 0777
    dest: "/home/synapse/data/{{ ma1sd_name }}/ma1sd.yaml"
  register: ma1sd_config_trigger

- name: Create MA1SD Container
  containers.podman.podman_container:
    name: "{{ ma1sd_container_name }}"
    image: "{{ ma1sd_podman_image }}"
    state: started
    restart: "{{ ma1sd_config_trigger.changed }}"
    pod: synapse_pod
    volumes:
      - "/home/synapse/data/{{ ma1sd_name }}:/etc/ma1sd"

# -------------------------------------
# Start HTTPS-Portal Container

- name: Create HTTPS-Portal Container
  containers.podman.podman_container:
    name: "{{ https_portal_container_name }}"
    image: "{{ https_portal_podman_image }}"
    state: started
    pod: synapse_pod
    env:
      DOMAINS: "{{ synapse_server_name }}"
      STAGE: 'staging'
      CUSTOM_NGINX_SERVER_CONFIG_BLOCK: |
        location /.well-known/matrix/server {
          return 200 '{ "m.server": "{{ synapse_server_name }}:443" }';
        }

        location /.well-known/matrix/client {
          return 200 '{ "m.homeserver": { "base_url": "https://{{ synapse_server_name }}" } }';
        }

        location /_matrix/client/r0/user_directory {
          proxy_pass http://127.0.0.1:8090/_matrix/client/r0/user_directory;
        }

        location /_matrix {
          proxy_pass "http://127.0.0.1:8008";
        }

# ------------------------------------
# Add Port Forwarding

- name: Add Host Port Forwarding
  ansible.builtin.iptables:
    table: nat
    chain: PREROUTING
    in_interface: eth0
    protocol: tcp
    match: tcp
    destination_port: "{{ item.destination }}"
    jump: REDIRECT
    to_ports: "{{ item.redirection }}"
  with_items:
    - {destination: 80, redirection: 8080}
    - {destination: 443, redirection: 4343}
    - {destination: 8448, redirection: 8080}
  become: true
